<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on 平波湛影</title>
    <link>http://m.l2d.xyz/tags/go/</link>
    <description>Recent content in Go on 平波湛影</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 16 Sep 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://m.l2d.xyz/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go 和 C/C&#43;&#43; 的运算符优先级问题</title>
      <link>http://m.l2d.xyz/p/2015/go-cpp-op-precedence/</link>
      <pubDate>Wed, 16 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://m.l2d.xyz/p/2015/go-cpp-op-precedence/</guid>
      <description>一般都是把 Go 看成是现代化的 C，在 C 的基础上做了很多改进，语法更简单，很多语句也更优美了（比如 for）。但是也埋下了一些坑，不注意就会踩到，比如下面的这个运算符优先级的问题。
这个坑是在写加解密算法的时候碰到的，代码类似 这两行，如下：
v0 += ((v1 &amp;lt;&amp;lt; 4) + k0) ^ (v1 + sum) ^ ((v1 &amp;gt;&amp;gt; 5) + k1) v1 += ((v0 &amp;lt;&amp;lt; 4) + k2) ^ (v0 + sum) ^ ((v0 &amp;gt;&amp;gt; 5) + k3)  上面的两行代码是正确的，忘了当初是忘记加哪个括号了，当时检查代码好久都没发现问题，直到后来一点点加上括号才找出问题来：原来在 Go 里，+ - 和 ^ 的优先级是一样的，而在 C/C++ 里，+ - 的优先级要高于 ^。
其实也不用举这么复杂的例子，下面的简单例子就可以说明问题了：
3 * 2 &amp;lt;&amp;lt; 3 * 2  在 Go 里 结果是 ((3 * 2) &amp;lt;&amp;lt; 3) * 2 = 96，而在 C/C++， 以及 Python 里，结果却是 (3*2) &amp;lt;&amp;lt; (3*2) = 384。</description>
    </item>
    
  </channel>
</rss>